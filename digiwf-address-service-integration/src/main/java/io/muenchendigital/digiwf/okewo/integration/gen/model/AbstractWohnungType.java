/*
 * Camel REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: Schema 2.0.2 Service 2.3.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.muenchendigital.digiwf.okewo.integration.gen.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import io.swagger.v3.oas.annotations.media.Schema;

import javax.validation.Valid;
import java.util.Objects;

/**
 * AbstractWohnungType
 */

@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "_type", visible = true)
@JsonSubTypes({
        @JsonSubTypes.Type(value = AktuelleWohnungType.class, name = "aktuelleWohnung"),
        @JsonSubTypes.Type(value = InaktuelleWohnungType.class, name = "inaktuelleWohnung"),
        @JsonSubTypes.Type(value = WegzugsWohnungType.class, name = "wegzugsWohnung"),
        @JsonSubTypes.Type(value = ZuzugsWohnungType.class, name = "zuzugsWohnung"),
})

public class AbstractWohnungType {
    @JsonProperty("melderegisterAnschrift")
    private AnschriftErweitertType melderegisterAnschrift = null;

    @JsonProperty("einzug")
    private String einzug = null;

    @JsonProperty("auszug")
    private TeilbekanntesDatumType auszug = null;

    @JsonProperty("statuswechsel")
    private String statuswechsel = null;

    @JsonProperty("meldungStatuswechsel")
    private MeldungType meldungStatuswechsel = null;

    @JsonProperty("meldungEinzug")
    private MeldungType meldungEinzug = null;

    @JsonProperty("meldungAuszug")
    private MeldungType meldungAuszug = null;

    @JsonProperty("innerhalb")
    private Boolean innerhalb = null;

    @JsonProperty("belegGebunden")
    private Boolean belegGebunden = null;

    @JsonProperty("gefoerdert")
    private Boolean gefoerdert = null;

    @JsonProperty("scheinadresse")
    private Boolean scheinadresse = null;

    public AbstractWohnungType melderegisterAnschrift(final AnschriftErweitertType melderegisterAnschrift) {
        this.melderegisterAnschrift = melderegisterAnschrift;
        return this;
    }

    /**
     * Get melderegisterAnschrift
     *
     * @return melderegisterAnschrift
     **/
    @Valid
    @Schema(description = "")
    public AnschriftErweitertType getMelderegisterAnschrift() {
        return this.melderegisterAnschrift;
    }

    public void setMelderegisterAnschrift(final AnschriftErweitertType melderegisterAnschrift) {
        this.melderegisterAnschrift = melderegisterAnschrift;
    }

    public AbstractWohnungType einzug(final String einzug) {
        this.einzug = einzug;
        return this;
    }

    /**
     * Get einzug
     *
     * @return einzug
     **/
    @Schema(description = "")
    public String getEinzug() {
        return this.einzug;
    }

    public void setEinzug(final String einzug) {
        this.einzug = einzug;
    }

    public AbstractWohnungType auszug(final TeilbekanntesDatumType auszug) {
        this.auszug = auszug;
        return this;
    }

    /**
     * Get auszug
     *
     * @return auszug
     **/
    @Valid
    @Schema(description = "")
    public TeilbekanntesDatumType getAuszug() {
        return this.auszug;
    }

    public void setAuszug(final TeilbekanntesDatumType auszug) {
        this.auszug = auszug;
    }

    public AbstractWohnungType statuswechsel(final String statuswechsel) {
        this.statuswechsel = statuswechsel;
        return this;
    }

    /**
     * Get statuswechsel
     *
     * @return statuswechsel
     **/
    @Schema(description = "")
    public String getStatuswechsel() {
        return this.statuswechsel;
    }

    public void setStatuswechsel(final String statuswechsel) {
        this.statuswechsel = statuswechsel;
    }

    public AbstractWohnungType meldungStatuswechsel(final MeldungType meldungStatuswechsel) {
        this.meldungStatuswechsel = meldungStatuswechsel;
        return this;
    }

    /**
     * Get meldungStatuswechsel
     *
     * @return meldungStatuswechsel
     **/
    @Valid
    @Schema(description = "")
    public MeldungType getMeldungStatuswechsel() {
        return this.meldungStatuswechsel;
    }

    public void setMeldungStatuswechsel(final MeldungType meldungStatuswechsel) {
        this.meldungStatuswechsel = meldungStatuswechsel;
    }

    public AbstractWohnungType meldungEinzug(final MeldungType meldungEinzug) {
        this.meldungEinzug = meldungEinzug;
        return this;
    }

    /**
     * Get meldungEinzug
     *
     * @return meldungEinzug
     **/
    @Valid
    @Schema(description = "")
    public MeldungType getMeldungEinzug() {
        return this.meldungEinzug;
    }

    public void setMeldungEinzug(final MeldungType meldungEinzug) {
        this.meldungEinzug = meldungEinzug;
    }

    public AbstractWohnungType meldungAuszug(final MeldungType meldungAuszug) {
        this.meldungAuszug = meldungAuszug;
        return this;
    }

    /**
     * Get meldungAuszug
     *
     * @return meldungAuszug
     **/
    @Valid
    @Schema(description = "")
    public MeldungType getMeldungAuszug() {
        return this.meldungAuszug;
    }

    public void setMeldungAuszug(final MeldungType meldungAuszug) {
        this.meldungAuszug = meldungAuszug;
    }

    public AbstractWohnungType innerhalb(final Boolean innerhalb) {
        this.innerhalb = innerhalb;
        return this;
    }

    /**
     * Get innerhalb
     *
     * @return innerhalb
     **/
    @Schema(description = "")
    public Boolean isInnerhalb() {
        return this.innerhalb;
    }

    public void setInnerhalb(final Boolean innerhalb) {
        this.innerhalb = innerhalb;
    }

    public AbstractWohnungType belegGebunden(final Boolean belegGebunden) {
        this.belegGebunden = belegGebunden;
        return this;
    }

    /**
     * Get belegGebunden
     *
     * @return belegGebunden
     **/
    @Schema(description = "")
    public Boolean isBelegGebunden() {
        return this.belegGebunden;
    }

    public void setBelegGebunden(final Boolean belegGebunden) {
        this.belegGebunden = belegGebunden;
    }

    public AbstractWohnungType gefoerdert(final Boolean gefoerdert) {
        this.gefoerdert = gefoerdert;
        return this;
    }

    /**
     * Get gefoerdert
     *
     * @return gefoerdert
     **/
    @Schema(description = "")
    public Boolean isGefoerdert() {
        return this.gefoerdert;
    }

    public void setGefoerdert(final Boolean gefoerdert) {
        this.gefoerdert = gefoerdert;
    }

    public AbstractWohnungType scheinadresse(final Boolean scheinadresse) {
        this.scheinadresse = scheinadresse;
        return this;
    }

    /**
     * Get scheinadresse
     *
     * @return scheinadresse
     **/
    @Schema(description = "")
    public Boolean isScheinadresse() {
        return this.scheinadresse;
    }

    public void setScheinadresse(final Boolean scheinadresse) {
        this.scheinadresse = scheinadresse;
    }


    @Override
    public boolean equals(final java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || this.getClass() != o.getClass()) {
            return false;
        }
        final AbstractWohnungType abstractWohnungType = (AbstractWohnungType) o;
        return Objects.equals(this.melderegisterAnschrift, abstractWohnungType.melderegisterAnschrift) &&
                Objects.equals(this.einzug, abstractWohnungType.einzug) &&
                Objects.equals(this.auszug, abstractWohnungType.auszug) &&
                Objects.equals(this.statuswechsel, abstractWohnungType.statuswechsel) &&
                Objects.equals(this.meldungStatuswechsel, abstractWohnungType.meldungStatuswechsel) &&
                Objects.equals(this.meldungEinzug, abstractWohnungType.meldungEinzug) &&
                Objects.equals(this.meldungAuszug, abstractWohnungType.meldungAuszug) &&
                Objects.equals(this.innerhalb, abstractWohnungType.innerhalb) &&
                Objects.equals(this.belegGebunden, abstractWohnungType.belegGebunden) &&
                Objects.equals(this.gefoerdert, abstractWohnungType.gefoerdert) &&
                Objects.equals(this.scheinadresse, abstractWohnungType.scheinadresse);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.melderegisterAnschrift, this.einzug, this.auszug, this.statuswechsel, this.meldungStatuswechsel, this.meldungEinzug, this.meldungAuszug, this.innerhalb, this.belegGebunden, this.gefoerdert, this.scheinadresse);
    }


    @Override
    public String toString() {
        final StringBuilder sb = new StringBuilder();
        sb.append("class AbstractWohnungType {\n");

        sb.append("    melderegisterAnschrift: ").append(this.toIndentedString(this.melderegisterAnschrift)).append("\n");
        sb.append("    einzug: ").append(this.toIndentedString(this.einzug)).append("\n");
        sb.append("    auszug: ").append(this.toIndentedString(this.auszug)).append("\n");
        sb.append("    statuswechsel: ").append(this.toIndentedString(this.statuswechsel)).append("\n");
        sb.append("    meldungStatuswechsel: ").append(this.toIndentedString(this.meldungStatuswechsel)).append("\n");
        sb.append("    meldungEinzug: ").append(this.toIndentedString(this.meldungEinzug)).append("\n");
        sb.append("    meldungAuszug: ").append(this.toIndentedString(this.meldungAuszug)).append("\n");
        sb.append("    innerhalb: ").append(this.toIndentedString(this.innerhalb)).append("\n");
        sb.append("    belegGebunden: ").append(this.toIndentedString(this.belegGebunden)).append("\n");
        sb.append("    gefoerdert: ").append(this.toIndentedString(this.gefoerdert)).append("\n");
        sb.append("    scheinadresse: ").append(this.toIndentedString(this.scheinadresse)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(final java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
