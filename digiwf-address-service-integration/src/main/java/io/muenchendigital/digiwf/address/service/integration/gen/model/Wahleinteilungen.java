/*
 * Address-Service API
 * ## Zentraler Service für Adressen.  Weitere Informationen zu diesem Service erhalten Sie hier:  [Geodatenpool / Geodateninfrastruktur in Wilma](https://wilma.muenchen.de/workspaces/geodatenpool-gdp-geodateninfrastruktur-gdi)  Über die \"Try it out\" Funktion können direkt aus dieser Dokumentation Test-Anfragen gesendet werden.   ### Allgemeine Informationen  * Die maximale Ergebnismenge beträgt 10.000 Elemente  * Sortierung standardmäßig über Scoring (Empfohlen)  * Für die Anbindung einer EAI aus dem Datacenter muss die EAI-URL genutzt werden (Siehe unten Servers)   ### DEPRECATED - Bitte auf Version 2 migrieren  
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.muenchendigital.digiwf.address.service.integration.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Wahleinteilungen mit Stimm- und Wahlgebieten
 */
@Schema(description = "Wahleinteilungen mit Stimm- und Wahlgebieten")

public class Wahleinteilungen {
  @JsonProperty("stimmbezirk")
  private Long stimmbezirk = null;

  @JsonProperty("stimmkreis")
  private Long stimmkreis = null;

  @JsonProperty("wahlkreis")
  private Long wahlkreis = null;

  @JsonProperty("wahlbezirk")
  private Long wahlbezirk = null;

  public Wahleinteilungen stimmbezirk(Long stimmbezirk) {
    this.stimmbezirk = stimmbezirk;
    return this;
  }

   /**
   * Get stimmbezirk
   * @return stimmbezirk
  **/
  @Schema(description = "")
  public Long getStimmbezirk() {
    return stimmbezirk;
  }

  public void setStimmbezirk(Long stimmbezirk) {
    this.stimmbezirk = stimmbezirk;
  }

  public Wahleinteilungen stimmkreis(Long stimmkreis) {
    this.stimmkreis = stimmkreis;
    return this;
  }

   /**
   * Get stimmkreis
   * @return stimmkreis
  **/
  @Schema(description = "")
  public Long getStimmkreis() {
    return stimmkreis;
  }

  public void setStimmkreis(Long stimmkreis) {
    this.stimmkreis = stimmkreis;
  }

  public Wahleinteilungen wahlkreis(Long wahlkreis) {
    this.wahlkreis = wahlkreis;
    return this;
  }

   /**
   * Get wahlkreis
   * @return wahlkreis
  **/
  @Schema(description = "")
  public Long getWahlkreis() {
    return wahlkreis;
  }

  public void setWahlkreis(Long wahlkreis) {
    this.wahlkreis = wahlkreis;
  }

  public Wahleinteilungen wahlbezirk(Long wahlbezirk) {
    this.wahlbezirk = wahlbezirk;
    return this;
  }

   /**
   * Get wahlbezirk
   * @return wahlbezirk
  **/
  @Schema(description = "")
  public Long getWahlbezirk() {
    return wahlbezirk;
  }

  public void setWahlbezirk(Long wahlbezirk) {
    this.wahlbezirk = wahlbezirk;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Wahleinteilungen wahleinteilungen = (Wahleinteilungen) o;
    return Objects.equals(this.stimmbezirk, wahleinteilungen.stimmbezirk) &&
        Objects.equals(this.stimmkreis, wahleinteilungen.stimmkreis) &&
        Objects.equals(this.wahlkreis, wahleinteilungen.wahlkreis) &&
        Objects.equals(this.wahlbezirk, wahleinteilungen.wahlbezirk);
  }

  @Override
  public int hashCode() {
    return Objects.hash(stimmbezirk, stimmkreis, wahlkreis, wahlbezirk);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Wahleinteilungen {\n");
    
    sb.append("    stimmbezirk: ").append(toIndentedString(stimmbezirk)).append("\n");
    sb.append("    stimmkreis: ").append(toIndentedString(stimmkreis)).append("\n");
    sb.append("    wahlkreis: ").append(toIndentedString(wahlkreis)).append("\n");
    sb.append("    wahlbezirk: ").append(toIndentedString(wahlbezirk)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
