/*
 * Address-Service API
 * ## Zentraler Service für Adressen.  Weitere Informationen zu diesem Service erhalten Sie hier:  [Geodatenpool / Geodateninfrastruktur in Wilma](https://wilma.muenchen.de/workspaces/geodatenpool-gdp-geodateninfrastruktur-gdi)  Über die \"Try it out\" Funktion können direkt aus dieser Dokumentation Test-Anfragen gesendet werden.   ### Allgemeine Informationen  * Die maximale Ergebnismenge beträgt 10.000 Elemente  * Sortierung standardmäßig über Scoring (Empfohlen)  * Für die Anbindung einer EAI aus dem Datacenter muss die EAI-URL genutzt werden (Siehe unten Servers)   ### DEPRECATED - Bitte auf Version 2 migrieren  
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.muenchendigital.digiwf.address.service.integration.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Page-Objekt für Informationen zur Pagination
 */
@Schema(description = "Page-Objekt für Informationen zur Pagination")

public class AddressServicePage {
  @JsonProperty("size")
  private Integer size = null;

  @JsonProperty("number")
  private Integer number = null;

  @JsonProperty("totalElements")
  private Long totalElements = null;

  @JsonProperty("numberOfElements")
  private Long numberOfElements = null;

  @JsonProperty("totalPages")
  private Long totalPages = null;

  public AddressServicePage size(Integer size) {
    this.size = size;
    return this;
  }

   /**
   * Seitengröße. Anzahl maximal angezeigter Ergebnisse pro Seite
   * minimum: 1
   * maximum: 100
   * @return size
  **/
 @Min(1) @Max(100)  @Schema(example = "20", description = "Seitengröße. Anzahl maximal angezeigter Ergebnisse pro Seite")
  public Integer getSize() {
    return size;
  }

  public void setSize(Integer size) {
    this.size = size;
  }

  public AddressServicePage number(Integer number) {
    this.number = number;
    return this;
  }

   /**
   * Seitennummer
   * @return number
  **/
  @Schema(description = "Seitennummer")
  public Integer getNumber() {
    return number;
  }

  public void setNumber(Integer number) {
    this.number = number;
  }

  public AddressServicePage totalElements(Long totalElements) {
    this.totalElements = totalElements;
    return this;
  }

   /**
   * Gesamtanzahl aller verfügbaren Ergebnisse
   * @return totalElements
  **/
  @Schema(description = "Gesamtanzahl aller verfügbaren Ergebnisse")
  public Long getTotalElements() {
    return totalElements;
  }

  public void setTotalElements(Long totalElements) {
    this.totalElements = totalElements;
  }

  public AddressServicePage numberOfElements(Long numberOfElements) {
    this.numberOfElements = numberOfElements;
    return this;
  }

   /**
   * Anzahl der Ergebnisse auf dieser Seite
   * @return numberOfElements
  **/
  @Schema(description = "Anzahl der Ergebnisse auf dieser Seite")
  public Long getNumberOfElements() {
    return numberOfElements;
  }

  public void setNumberOfElements(Long numberOfElements) {
    this.numberOfElements = numberOfElements;
  }

  public AddressServicePage totalPages(Long totalPages) {
    this.totalPages = totalPages;
    return this;
  }

   /**
   * Gesamtanzahl der Seiten
   * @return totalPages
  **/
  @Schema(description = "Gesamtanzahl der Seiten")
  public Long getTotalPages() {
    return totalPages;
  }

  public void setTotalPages(Long totalPages) {
    this.totalPages = totalPages;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddressServicePage addressServicePage = (AddressServicePage) o;
    return Objects.equals(this.size, addressServicePage.size) &&
        Objects.equals(this.number, addressServicePage.number) &&
        Objects.equals(this.totalElements, addressServicePage.totalElements) &&
        Objects.equals(this.numberOfElements, addressServicePage.numberOfElements) &&
        Objects.equals(this.totalPages, addressServicePage.totalPages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(size, number, totalElements, numberOfElements, totalPages);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddressServicePage {\n");
    
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    totalElements: ").append(toIndentedString(totalElements)).append("\n");
    sb.append("    numberOfElements: ").append(toIndentedString(numberOfElements)).append("\n");
    sb.append("    totalPages: ").append(toIndentedString(totalPages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
