/*
 * Address-Service API
 * ## Zentraler Service für Adressen.  Weitere Informationen zu diesem Service erhalten Sie hier:  [Geodatenpool / Geodateninfrastruktur in Wilma](https://wilma.muenchen.de/workspaces/geodatenpool-gdp-geodateninfrastruktur-gdi)  Über die \"Try it out\" Funktion können direkt aus dieser Dokumentation Test-Anfragen gesendet werden.   ### Allgemeine Informationen  * Die maximale Ergebnismenge beträgt 10.000 Elemente  * Sortierung standardmäßig über Scoring (Empfohlen)  * Für die Anbindung einer EAI aus dem Datacenter muss die EAI-URL genutzt werden (Siehe unten Servers)   ### DEPRECATED - Bitte auf Version 2 migrieren  
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.muenchendigital.digiwf.address.service.integration.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Date;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Wirkung mit Datum, Status und Vorgang
 */
@Schema(description = "Wirkung mit Datum, Status und Vorgang")

public class Wirkung {
  /**
   * Gets or Sets vorgang
   */
  public enum VorgangEnum {
    EINZIEHUNG("EINZIEHUNG"),
    NEUERTEILUNG("NEUERTEILUNG"),
    UMNUMMERIERUNG("UMNUMMERIERUNG"),
    WIEDERERTEILUNG("WIEDERERTEILUNG");

    private String value;

    VorgangEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static VorgangEnum fromValue(String input) {
      for (VorgangEnum b : VorgangEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("vorgang")
  private VorgangEnum vorgang = null;

  @JsonProperty("wirkungsdatum")
  private String wirkungsdatum = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    AKTIV("AKTIV"),
    HISTORISCH("HISTORISCH");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("status")
  private StatusEnum status = null;

  public Wirkung vorgang(VorgangEnum vorgang) {
    this.vorgang = vorgang;
    return this;
  }

   /**
   * Get vorgang
   * @return vorgang
  **/
  @NotNull
  @Schema(required = true, description = "")
  public VorgangEnum getVorgang() {
    return vorgang;
  }

  public void setVorgang(VorgangEnum vorgang) {
    this.vorgang = vorgang;
  }

  public Wirkung wirkungsdatum(String wirkungsdatum) {
    this.wirkungsdatum = wirkungsdatum;
    return this;
  }

   /**
   * Get wirkungsdatum
   * @return wirkungsdatum
  **/
  @NotNull
  @Valid
  @Schema(required = true, description = "")
  public String getWirkungsdatum() {
    return wirkungsdatum;
  }

  public void setWirkungsdatum(String wirkungsdatum) {
    this.wirkungsdatum = wirkungsdatum;
  }

  public Wirkung status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @NotNull
  @Schema(required = true, description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Wirkung wirkung = (Wirkung) o;
    return Objects.equals(this.vorgang, wirkung.vorgang) &&
        Objects.equals(this.wirkungsdatum, wirkung.wirkungsdatum) &&
        Objects.equals(this.status, wirkung.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vorgang, wirkungsdatum, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Wirkung {\n");
    
    sb.append("    vorgang: ").append(toIndentedString(vorgang)).append("\n");
    sb.append("    wirkungsdatum: ").append(toIndentedString(wirkungsdatum)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
